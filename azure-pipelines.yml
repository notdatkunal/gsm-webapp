trigger:
- master

variables:
  azureServiceConnection: 'AlongX-Azure-Account-Development'
  webAppName: 'gsm-webapp'
  vmImageName: 'ubuntu-latest'
  environmentName: 'gsm-webapp'
  pythonVersion: '3.12'
  isRelease: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]

  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv env
        source env/bin/activate
        pip install -r requirements.txt
      displayName: 'Install Dependencies'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
      displayName: 'Archive Files'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'drop'
        publishLocation: 'pipeline'
      displayName: 'Publish Pipeline Artifact'

  - deployment: DeployToAzureAppService
    displayName: 'Deploy to Azure App Service'
    environment: $(environmentName)  # Replace with your environment name
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'
            displayName: 'Download Pipeline Artifact'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: $(azureServiceConnection)
              appType: 'webAppLinux'
              appName: $(webAppName)
              package: '$(System.ArtifactsDirectory)/**/*.zip'
            displayName: 'Deploy to Azure App Service'