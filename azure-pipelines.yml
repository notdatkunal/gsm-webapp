trigger:
- master

variables:
  azureServiceConnection: 'AlongX-Azure-Account-Development'
  webAppName: 'gsm-webapp'
  resourceGroupName: 'Development'
  vmImageName: 'ubuntu-latest'
  environmentName: 'gsm-webapp'
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: '3.12'
  isRelease: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]

stages:
- stage: Build
  displayName: Build Stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        artifact: 'drop'
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: 'Deploy to Develop Environment'
  dependsOn: Build
  condition: and(succeeded(), eq(variables.isRelease, true))
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureAppServiceSettings@1
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appName: $(webAppName)
              resourceGroupName: '$(resourceGroupName)'
              appSettings: |
                [
                  {
                    "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                    "value": 1
                  }
                ]

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : $(webAppName)'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appType: 'webAppLinux'
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'